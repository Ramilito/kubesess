on:
  workflow_call:

name: "[reusable] package and release"
jobs:
  build:
    name: Rust project
    runs-on: ${{ matrix.os }}
    env:
      # For some builds, we use cross to test on 32-bit and big-endian
      # systems.
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`.
      TARGET_FLAGS: ""
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
      TARGET_DIR: ./target
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        include:
        - os: ubuntu-22.04
          rust: stable
          target: x86_64-unknown-linux-gnu
        - os: ubuntu-22.04
          rust: stable
          target: aarch64-unknown-linux-gnu
        - os: ubuntu-22.04
          rust: stable
          target: x86_64-unknown-linux-musl
        - os: ubuntu-22.04
          rust: stable
          target: aarch64-unknown-linux-musl
        - os: macos-13
          rust: stable
          target: x86_64-apple-darwin
        - os: macos-13
          rust: stable
          target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3
        with:
           fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Use Cross
        shell: bash
        run: |
          cargo install cross
          echo "CARGO=cross" >> $GITHUB_ENV
          echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV
          echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

      - name: Show command used for Cargo
        run: |
          echo "cargo command is: ${{ env.CARGO }}"
          echo "target flag is: ${{ env.TARGET_FLAGS }}"
          echo "target dir is: ${{ env.TARGET_DIR }}"

      - name: Build release binary
        run: ${{ env.CARGO }} build --verbose --release ${{ env.TARGET_FLAGS }}

      - name: Get latest tag
        if: github.event_name == 'release'
        id: get-latest-tag
        run: |
           echo LATEST_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --max-count=1)) >> $GITHUB_ENV

      - name: Package 
        if: github.event_name == 'release'
        run: |
          make bundle_release TARGET=${{ matrix.target }}

      - uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        name: Upload release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target}}/release/kubesess_${{ matrix.target }}.tar.gz
          asset_name: kubesess_${{ env.LATEST_TAG }}_${{ matrix.target }}.tar.gz
          tag: ${{ env.LATEST_TAG }}
